// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cluster_status_response.proto

package models

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NodeStatus struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Build                string   `protobuf:"bytes,3,opt,name=build,proto3" json:"build,omitempty"`
	StartedAt            string   `protobuf:"bytes,4,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsAvailable          bool     `protobuf:"varint,6,opt,name=is_available,json=isAvailable,proto3" json:"is_available,omitempty"`
	IsLive               bool     `protobuf:"varint,7,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeStatus) Reset()         { *m = NodeStatus{} }
func (m *NodeStatus) String() string { return proto.CompactTextString(m) }
func (*NodeStatus) ProtoMessage()    {}
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c1179cc8f2c3db0, []int{0}
}

func (m *NodeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeStatus.Unmarshal(m, b)
}
func (m *NodeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeStatus.Marshal(b, m, deterministic)
}
func (m *NodeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeStatus.Merge(m, src)
}
func (m *NodeStatus) XXX_Size() int {
	return xxx_messageInfo_NodeStatus.Size(m)
}
func (m *NodeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeStatus.DiscardUnknown(m)
}

var xxx_messageInfo_NodeStatus proto.InternalMessageInfo

func (m *NodeStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NodeStatus) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *NodeStatus) GetBuild() string {
	if m != nil {
		return m.Build
	}
	return ""
}

func (m *NodeStatus) GetStartedAt() string {
	if m != nil {
		return m.StartedAt
	}
	return ""
}

func (m *NodeStatus) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *NodeStatus) GetIsAvailable() bool {
	if m != nil {
		return m.IsAvailable
	}
	return false
}

func (m *NodeStatus) GetIsLive() bool {
	if m != nil {
		return m.IsLive
	}
	return false
}

type ClusterStatusResponse struct {
	Nodes                []*NodeStatus `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	LastUpdated          string        `protobuf:"bytes,2,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ClusterStatusResponse) Reset()         { *m = ClusterStatusResponse{} }
func (m *ClusterStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterStatusResponse) ProtoMessage()    {}
func (*ClusterStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c1179cc8f2c3db0, []int{1}
}

func (m *ClusterStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClusterStatusResponse.Unmarshal(m, b)
}
func (m *ClusterStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClusterStatusResponse.Marshal(b, m, deterministic)
}
func (m *ClusterStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterStatusResponse.Merge(m, src)
}
func (m *ClusterStatusResponse) XXX_Size() int {
	return xxx_messageInfo_ClusterStatusResponse.Size(m)
}
func (m *ClusterStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterStatusResponse proto.InternalMessageInfo

func (m *ClusterStatusResponse) GetNodes() []*NodeStatus {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *ClusterStatusResponse) GetLastUpdated() string {
	if m != nil {
		return m.LastUpdated
	}
	return ""
}

type Void struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Void) Reset()         { *m = Void{} }
func (m *Void) String() string { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()    {}
func (*Void) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c1179cc8f2c3db0, []int{2}
}

func (m *Void) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Void.Unmarshal(m, b)
}
func (m *Void) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Void.Marshal(b, m, deterministic)
}
func (m *Void) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Void.Merge(m, src)
}
func (m *Void) XXX_Size() int {
	return xxx_messageInfo_Void.Size(m)
}
func (m *Void) XXX_DiscardUnknown() {
	xxx_messageInfo_Void.DiscardUnknown(m)
}

var xxx_messageInfo_Void proto.InternalMessageInfo

func init() {
	proto.RegisterType((*NodeStatus)(nil), "models.NodeStatus")
	proto.RegisterType((*ClusterStatusResponse)(nil), "models.ClusterStatusResponse")
	proto.RegisterType((*Void)(nil), "models.Void")
}

func init() { proto.RegisterFile("cluster_status_response.proto", fileDescriptor_2c1179cc8f2c3db0) }

var fileDescriptor_2c1179cc8f2c3db0 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x86, 0x49, 0x3f, 0x12, 0x7a, 0xad, 0x18, 0x2c, 0x10, 0x16, 0x52, 0xa5, 0x92, 0x29, 0x53,
	0x87, 0xb2, 0xb1, 0x45, 0x08, 0xb1, 0x20, 0x86, 0x20, 0x58, 0x2d, 0x87, 0xbb, 0xc1, 0x92, 0xa9,
	0xa3, 0x9c, 0x93, 0x9f, 0xc8, 0xef, 0x42, 0xb1, 0x1d, 0xb1, 0x30, 0xde, 0xf3, 0xbe, 0xca, 0xdd,
	0x13, 0xc3, 0xfe, 0xcb, 0x0e, 0xec, 0xa9, 0x57, 0xec, 0xb5, 0x1f, 0x58, 0xf5, 0xc4, 0x9d, 0x3b,
	0x33, 0x1d, 0xbb, 0xde, 0x79, 0x27, 0xf2, 0x6f, 0x87, 0x64, 0xb9, 0xfc, 0xc9, 0x00, 0xde, 0x1c,
	0xd2, 0x7b, 0x68, 0x89, 0x2b, 0x58, 0x18, 0x94, 0xd9, 0x21, 0xab, 0x36, 0xcd, 0xc2, 0xa0, 0x90,
	0x50, 0x68, 0xc4, 0x9e, 0x98, 0xe5, 0x22, 0xc0, 0x79, 0x14, 0xd7, 0xb0, 0x6e, 0x07, 0x63, 0x51,
	0x2e, 0x03, 0x8f, 0x83, 0xd8, 0x03, 0xb0, 0xd7, 0xbd, 0x27, 0x54, 0xda, 0xcb, 0x55, 0x88, 0x36,
	0x89, 0xd4, 0x7e, 0x8a, 0x87, 0x0e, 0x75, 0x8a, 0xd7, 0x31, 0x4e, 0xa4, 0xf6, 0xe2, 0x1e, 0x76,
	0x86, 0x95, 0x1e, 0xb5, 0xb1, 0xba, 0xb5, 0x24, 0xf3, 0x43, 0x56, 0x5d, 0x36, 0x5b, 0xc3, 0xf5,
	0x8c, 0xc4, 0x2d, 0x14, 0x86, 0x95, 0x35, 0x23, 0xc9, 0x22, 0xa4, 0xb9, 0xe1, 0x57, 0x33, 0x52,
	0x89, 0x70, 0xf3, 0x14, 0x8d, 0xa3, 0x4a, 0x93, 0x7c, 0x45, 0x05, 0xeb, 0xb3, 0x43, 0x62, 0x99,
	0x1d, 0x96, 0xd5, 0xf6, 0x24, 0x8e, 0xd1, 0xfc, 0xf8, 0x67, 0xdd, 0xc4, 0xc2, 0xb4, 0xde, 0x6a,
	0xf6, 0x2a, 0x1d, 0x94, 0x8c, 0xb7, 0x13, 0xfb, 0x88, 0xa8, 0xcc, 0x61, 0xf5, 0xe9, 0x0c, 0x9e,
	0x9e, 0xa1, 0x48, 0xdb, 0xc4, 0x23, 0x6c, 0x5e, 0xc8, 0xa7, 0xff, 0xb7, 0x9b, 0xbf, 0x3e, 0xb5,
	0xee, 0xf6, 0xf3, 0xf4, 0xef, 0x65, 0xe5, 0x45, 0x9b, 0x87, 0xc7, 0x78, 0xf8, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0x6a, 0xd7, 0x19, 0xc5, 0xad, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterClient is the client API for Cluster service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterClient interface {
	GetStatus(ctx context.Context, in *Void, opts ...grpc.CallOption) (*ClusterStatusResponse, error)
}

type clusterClient struct {
	cc *grpc.ClientConn
}

func NewClusterClient(cc *grpc.ClientConn) ClusterClient {
	return &clusterClient{cc}
}

func (c *clusterClient) GetStatus(ctx context.Context, in *Void, opts ...grpc.CallOption) (*ClusterStatusResponse, error) {
	out := new(ClusterStatusResponse)
	err := c.cc.Invoke(ctx, "/models.Cluster/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterServer is the server API for Cluster service.
type ClusterServer interface {
	GetStatus(context.Context, *Void) (*ClusterStatusResponse, error)
}

// UnimplementedClusterServer can be embedded to have forward compatible implementations.
type UnimplementedClusterServer struct {
}

func (*UnimplementedClusterServer) GetStatus(ctx context.Context, req *Void) (*ClusterStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStatus not implemented")
}

func RegisterClusterServer(s *grpc.Server, srv ClusterServer) {
	s.RegisterService(&_Cluster_serviceDesc, srv)
}

func _Cluster_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.Cluster/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).GetStatus(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cluster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "models.Cluster",
	HandlerType: (*ClusterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _Cluster_GetStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cluster_status_response.proto",
}
